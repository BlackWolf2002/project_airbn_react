import React, { useState, useEffect } from "react";
import "../style/RoomForm.css";
import { fetchLocations } from "../api/locationService";

const RoomForm = ({ initialData = {}, onSubmit, onClose }) => {
    const [formData, setFormData] = useState({
        tenPhong: "",
        moTa: "",
        giaTien: 0,
        khach: 0,
        phongNgu: 0,
        giuong: 0,
        phongTam: 0,
        mayGiat: false,
        banLa: false,
        tivi: false,
        dieuHoa: false,
        wifi: false,
        bep: false,
        doXe: false,
        hoBoi: false,
        maViTri: "",
        hinhAnh: "",
        ...initialData,
    });

    const [locations, setLocations] = useState([]); // L∆∞u danh s√°ch v·ªã tr√≠

    // üõ† G·ªçi API l·∫•y danh s√°ch v·ªã tr√≠ khi component mount
    useEffect(() => {
        const loadLocations = async () => {
            try {
                const response = await fetchLocations();
                setLocations(response.content || []); // L∆∞u danh s√°ch v·ªã tr√≠ v√†o state
            } catch (error) {
                console.error("‚ùå L·ªói khi l·∫•y danh s√°ch v·ªã tr√≠:", error);
            }
        };
        loadLocations();
    }, []);

    const handleChange = (e) => {
        const { name, value, type, checked } = e.target;
        setFormData((prev) => ({
            ...prev,
            [name]: type === "checkbox" ? checked : value,
        }));
    };

    const handleSubmit = (e) => {
        e.preventDefault();
        onSubmit(formData);
    };

    return (
        <div className="form-overlay">
            <div className="form-container">
                <h2>{formData.id ? "Ch·ªânh s·ª≠a ph√≤ng" : "Th√™m ph√≤ng thu√™"}</h2>
                <form onSubmit={handleSubmit}>
                    <label>Th√™m h√¨nh ph√≤ng</label>
                    <input
                        type="file"
                        name="hinhAnh"
                        onChange={(e) => {
                            const file = e.target.files[0];
                            setFormData((prev) => ({
                                ...prev,
                                hinhAnh: file ? URL.createObjectURL(file) : "",
                            }));
                        }}
                    />
                    <label>T√™n ph√≤ng</label>
                    <input
                        name="tenPhong"
                        value={formData.tenPhong || ""}
                        onChange={handleChange}
                        placeholder="Nh·∫≠p t√™n ph√≤ng"
                    />
                    <label>M√¥ t·∫£</label>
                    <textarea
                        name="moTa"
                        value={formData.moTa || ""}
                        onChange={handleChange}
                        placeholder="Nh·∫≠p m√¥ t·∫£"
                    />
                    <label>Gi√° ph√≤ng</label>
                    <input
                        type="number"
                        name="giaTien"
                        value={formData.giaTien || ""}
                        onChange={handleChange}
                        placeholder="Nh·∫≠p gi√° ph√≤ng"
                    />
                    <label>V·ªã tr√≠</label>
                    <select
                        name="maViTri"
                        value={formData.maViTri || ""}
                        onChange={handleChange}
                    >
                        <option value="">Ch·ªçn v·ªã tr√≠</option>
                        {locations.map((location) => (
                            <option key={location.id} value={location.id}>
                                {location.tenViTri}
                            </option>
                        ))}
                    </select>
                    <label>S·ªë kh√°ch</label>
                    <input
                        type="number"
                        name="khach"
                        value={formData.khach || ""}
                        onChange={handleChange}
                        placeholder="Nh·∫≠p s·ªë kh√°ch"
                    />
                    <label>S·ªë ph√≤ng ng·ªß</label>
                    <input
                        type="number"
                        name="phongNgu"
                        value={formData.phongNgu || ""}
                        onChange={handleChange}
                        placeholder="Nh·∫≠p s·ªë ph√≤ng ng·ªß"
                    />
                    <label>S·ªë gi∆∞·ªùng</label>
                    <input
                        type="number"
                        name="giuong"
                        value={formData.giuong || ""}
                        onChange={handleChange}
                        placeholder="Nh·∫≠p s·ªë gi∆∞·ªùng"
                    />
                    <label>S·ªë ph√≤ng t·∫Øm</label>
                    <input
                        type="number"
                        name="phongTam"
                        value={formData.phongTam || ""}
                        onChange={handleChange}
                        placeholder="Nh·∫≠p s·ªë ph√≤ng t·∫Øm"
                    />
                    <label>Ti·ªán √≠ch</label>
                    <div className="checkbox-group">
                        <label>
                            M√°y gi·∫∑t
                            <input
                                type="checkbox"
                                name="mayGiat"
                                checked={formData.mayGiat || false}
                                onChange={handleChange}
                            />
                        </label>
                        <label>
                            B√†n l√†
                            <input
                                type="checkbox"
                                name="banLa"
                                checked={formData.banLa || false}
                                onChange={handleChange}
                            />
                        </label>
                        <label>
                            Tivi
                            <input
                                type="checkbox"
                                name="tivi"
                                checked={formData.tivi || false}
                                onChange={handleChange}
                            />
                        </label>
                        <label>
                            ƒêi·ªÅu h√≤a
                            <input
                                type="checkbox"
                                name="dieuHoa"
                                checked={formData.dieuHoa || false}
                                onChange={handleChange}
                            />
                        </label>
                        <label>
                            Wifi
                            <input
                                type="checkbox"
                                name="wifi"
                                checked={formData.wifi || false}
                                onChange={handleChange}
                            />
                        </label>
                        <label>
                            B·∫øp
                            <input
                                type="checkbox"
                                name="bep"
                                checked={formData.bep || false}
                                onChange={handleChange}
                            />
                        </label>
                        <label>
                            ƒê·ªó xe
                            <input
                                type="checkbox"
                                name="doXe"
                                checked={formData.doXe || false}
                                onChange={handleChange}
                            />
                        </label>
                        <label>
                            H·ªì b∆°i
                            <input
                                type="checkbox"
                                name="hoBoi"
                                checked={formData.hoBoi || false}
                                onChange={handleChange}
                            />
                        </label>
                    </div>
                    <div className="form-actions">
                        <button type="button" onClick={onClose}>
                            H·ªßy
                        </button>
                        <button type="submit">
                            {formData.id ? "C·∫≠p nh·∫≠t" : "Th√™m m·ªõi"}
                        </button>
                    </div>
                </form>
            </div>
        </div>
    );
};

export default RoomForm;
