import React, { useState, useEffect } from "react";
import { addUser, updateUser } from "../api/userService";
import "../style/Modal.css";

const UserForm = ({ user, onClose }) => {
    const [formData, setFormData] = useState({
        name: "",
        email: "",
        phone: "",
        gender: "",
        birthday: "",
        role: "USER",
    });

    useEffect(() => {
        if (user) {
            setFormData({
                name: user.name || "",
                email: user.email || "",
                phone: user.phone || "",
                gender: user.gender || "",
                birthday: formatDate(user.birthday) || "",
                role: user.role || "USER",
            });
        }
    }, [user]);

    // üõ† H√†m chuy·ªÉn ƒë·ªïi ƒë·ªãnh d·∫°ng ng√†y th√°ng "dd/MM/yyyy" => "yyyy-MM-dd"
    const formatDate = (dateString) => {
        if (!dateString) return ""; // N·∫øu kh√¥ng c√≥ ng√†y sinh, tr·∫£ v·ªÅ r·ªóng
        const parts = dateString.split("/"); // T√°ch chu·ªói theo d·∫•u `/`
        if (parts.length === 3) {
            return `${parts[2]}-${parts[1]}-${parts[0]}`; // Tr·∫£ v·ªÅ ƒë·ªãnh d·∫°ng yyyy-MM-dd
        }
        return dateString; // N·∫øu kh√¥ng ƒë√∫ng ƒë·ªãnh d·∫°ng, gi·ªØ nguy√™n
    };

    const handleChange = (e) => {
        const { name, value } = e.target;
        setFormData({ ...formData, [name]: value });
    };

    const handleSubmit = async (e) => {
        e.preventDefault();

        if (
            !formData.name ||
            !formData.email ||
            !formData.phone ||
            !formData.gender ||
            !formData.birthday
        ) {
            alert("‚ö†Ô∏è Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin!");
            return;
        }

        console.log("üì¢ D·ªØ li·ªáu g·ª≠i l√™n:", formData); // Debug d·ªØ li·ªáu g·ª≠i l√™n API

        if (user) {
            await updateUser(user.id, formData);
            alert("‚úÖ C·∫≠p nh·∫≠t th√†nh c√¥ng!");
        } else {
            await addUser(formData);
            alert("‚úÖ Th√™m ng∆∞·ªùi d√πng th√†nh c√¥ng!");
        }

        onClose(); // ƒê√≥ng modal sau khi th√™m/c·∫≠p nh·∫≠t
    };
    return (
        <div className="modal-overlay">
            <div className="modal-content">
                <h2>{user ? "C·∫≠p nh·∫≠t ng∆∞·ªùi d√πng" : "Th√™m ng∆∞·ªùi d√πng"}</h2>
                <form onSubmit={handleSubmit} className="modal-form">
                    <label>T√™n ng∆∞·ªùi d√πng:</label>
                    <input
                        type="text"
                        name="name"
                        value={formData.name}
                        onChange={handleChange}
                        required
                    />

                    <label>Email:</label>
                    <input
                        type="email"
                        name="email"
                        value={formData.email}
                        onChange={handleChange}
                        required
                    />

                    <label>S·ªë ƒëi·ªán tho·∫°i:</label>
                    <input
                        type="text"
                        name="phone"
                        value={formData.phone}
                        onChange={handleChange}
                        required
                    />

                    <label>Gi·ªõi t√≠nh:</label>
                    <select
                        name="gender"
                        value={formData.gender}
                        onChange={handleChange}
                        required
                    >
                        <option value="">Ch·ªçn gi·ªõi t√≠nh</option>
                        <option value="Nam">Nam</option>
                        <option value="N·ªØ">N·ªØ</option>
                    </select>

                    <label>Ng√†y sinh:</label>
                    <input
                        type="date"
                        name="birthday"
                        value={formData.birthday}
                        onChange={handleChange}
                        required
                    />

                    <label>Ch·ª©c v·ª•:</label>
                    <select
                        name="role"
                        value={formData.role}
                        onChange={handleChange}
                        required
                    >
                        <option value="USER">User</option>
                        <option value="ADMIN">Admin</option>
                    </select>

                    <div className="modal-actions">
                        <button type="button" onClick={onClose}>
                            H·ªßy
                        </button>
                        <button type="submit">
                            {user ? "C·∫≠p nh·∫≠t" : "Th√™m ng∆∞·ªùi d√πng"}
                        </button>
                    </div>
                </form>
            </div>
        </div>
    );
};

export default UserForm;
